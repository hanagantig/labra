import random
import json
import os
import subprocess

# üìå –ü–∞–ø–∫–∞ —Å —Ç–µ–∫—Å—Ç–æ–≤—ã–º–∏ —Ñ–∞–π–ª–∞–º–∏
TEXT_FILES_DIR = "./texts"  # –£–∫–∞–∂–∏—Ç–µ –ø—É—Ç—å –∫ –ø–∞–ø–∫–µ —Å —Ç–µ–∫—Å—Ç–∞–º–∏
OUTPUT_DIR = "./images"     # –ü–∞–ø–∫–∞ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
FONT_NAME = "Arial"         # –ò—Å–ø–æ–ª—å–∑—É–µ–º—ã–π —à—Ä–∏—Ñ—Ç
FONTS_DIR = "/usr/share/fonts"  # –ö–∞—Ç–∞–ª–æ–≥ —à—Ä–∏—Ñ—Ç–æ–≤

# üìå –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –ø–∞–ø–∫–∞ –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
os.makedirs(OUTPUT_DIR, exist_ok=True)

# üìå –ò—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ (–∞–Ω–∞–ª–∏–∑—ã)
units = [
    "–≥/–ª", "–≥ /–ª", "–≥/ –ª", "–≥ / –ª", "–ì/–ª", "–ì /–ª", "–ì/ –ª", "–ì / –ª", "–≥/–õ", "–≥ /–õ", "–≥/ –õ", "–≥ / –õ", "–ì/–õ", "–ì /–õ", "–ì/ –õ", "–ì / –õ"
    "10^12/–ª", "10^12 /–ª", "10^12/ –ª", "10^12 / –ª", "10 ^12/–ª", "10 ^12 /–ª", "10 ^12/ –ª", "10 ^12 / –ª", "10^ 12/–ª", "10^ 12 /–ª", "10^ 12/ –ª", "10^ 12 / –ª", "10^12/–õ", "10^12 /–õ", "10^12/ –õ", "10^12 / –õ", "10 ^12/–õ", "10 ^12 /–õ", "10 ^12/ –õ", "10 ^12 / –õ", "10^ 12/–õ", "10^ 12 /–õ", "10^ 12/ –õ", "10^ 12 / –õ",
    "—Ñ–ª", "—Ñ –ª", "–§–ª", "–§ –ª", "—Ñ–õ", "—Ñ –õ", "–§–õ", "–§ –õ",
    "–ü–≥", "–ü –≥", "–ø–≥", "–ø –≥", "–ü–ì", "–ü –ì", "–ø–ì", "–ø –ì",
    "10^9/–ª", "10^9 /–ª", "10^9/ –ª", "10^9 / –ª", "10 ^9/–ª", "10 ^9 /–ª", "10 ^9/ –ª", "10 ^9 / –ª", "10^ 9/–ª", "10^ 9 /–ª", "10^ 9/ –ª", "10^ 9 / –ª", "10^9/–õ", "10^9 /–õ", "10^9/ –õ", "10^9 / –õ", "10 ^9/–õ", "10 ^9 /–õ", "10 ^9/ –õ", "10 ^9 / –õ", "10^ 9/–õ", "10^ 9 /–õ", "10^ 9/ –õ", "10^ 9 / –õ"
    "%",
    "–º–º–æ–ª—å/–ª", "–º–º–æ–ª—å /–ª", "–º–º–æ–ª—å/ –ª", "–º–º–æ–ª—å / –ª", "–ú–º–æ–ª—å/–ª", "–ú–º–æ–ª—å /–ª", "–ú–º–æ–ª—å/ –ª", "–ú–º–æ–ª—å / –ª", "–º–º–æ–ª—å/–õ", "–º–º–æ–ª—å /–õ", "–º–º–æ–ª—å/ –õ", "–º–º–æ–ª—å / –õ", "–ú–º–æ–ª—å/–õ", "–ú–º–æ–ª—å /–õ", "–ú–º–æ–ª—å/ –õ", "–ú–º–æ–ª—å / –õ",
    "–ú–ö–ú–ï/–º–ª", "–ú–ö–ú–ï /–º–ª", "–ú–ö–ú–ï/ –º–ª", "–ú–ö–ú–ï / –º–ª", "–º–ö–ú–ï/–º–ª", "–º–ö–ú–ï /–º–ª", "–º–ö–ú–ï/ –º–ª", "–º–ö–ú–ï / –º–ª", "–ú–ö–ú–ï/–ú–õ", "–ú–ö–ú–ï /–ú–õ", "–ú–ö–ú–ï/ –ú–õ", "–ú–ö–ú–ï / –ú–õ", "–º–ö–ú–ï/–ú–õ", "–º–ö–ú–ï /–ú–õ", "–º–ö–ú–ï/ –ú–õ", "–º–ö–ú–ï / –ú–õ",
    "–ø–º–æ–ª—å/–ª", "–ø–º–æ–ª—å /–ª", "–ø–º–æ–ª—å/ –ª", "–ø–º–æ–ª—å / –ª", "–ü–º–æ–ª—å/–ª", "–ü–º–æ–ª—å /–ª", "–ü–º–æ–ª—å/ –ª", "–ü–º–æ–ª—å / –ª", "–ø–º–æ–ª—å/–õ", "–ø–º–æ–ª—å /–õ", "–ø–º–æ–ª—å/ –õ", "–ø–º–æ–ª—å / –õ", "–ü–º–æ–ª—å/–õ", "–ü–º–æ–ª—å /–õ", "–ü–º–æ–ª—å/ –õ", "–ü–º–æ–ª—å / –õ",
    "–ú–ï/–º–ª", "–ú–ï /–º–ª", "–ú–ï/ –º–ª", "–ú–ï / –º–ª", "–º–ï/–º–ª", "–º–ï /–º–ª", "–º–ï/ –º–ª", "–º–ï / –º–ª", "–ú–ï/–ú–õ", "–ú–ï /–ú–õ", "–ú–ï/ –ú–õ", "–ú–ï / –ú–õ", "–º–ï/–ú–õ", "–º–ï /–ú–õ", "–º–ï/ –ú–õ", "–º–ï / –ú–õ",
    "–Ω–≥/–º–ª", "–Ω–≥ /–º–ª", "–Ω–≥/ –º–ª", "–Ω–≥ / –º–ª", "–ù–≥/–º–ª", "–ù–≥ /–º–ª", "–ù–≥/ –º–ª", "–ù–≥ / –º–ª", "–Ω–≥/–ú–õ", "–Ω–≥ /–ú–õ", "–Ω–≥/ –ú–õ", "–Ω–≥ / –ú–õ", "–ù–≥/–ú–õ", "–ù–≥ /–ú–õ", "–ù–≥/ –ú–õ", "–ù–≥ / –ú–õ",
    "109/–ª", "109 /–ª", "109/ –ª", "109 / –ª", "10 9/–ª", "10 9 /–ª", "10 9/ –ª", "10 9 / –ª", "109/–õ", "109 /–õ", "109/ –õ", "109 / –õ", "10 *9/–õ", "10 *9 /–õ", "10 *9/ –õ", "10 *9 / –õ",
    "10*12/–ª", "10*12 /–ª", "10*12/ –ª", "10*12 / –ª", "10* 12/–ª", "10* 12 /–ª", "10* 12/ –ª", "10* 12 / –ª", "10*12/–õ", "10*12 /–õ", "10*12/ –õ", "10*12 / –õ", "10 *12/–õ", "10 *12 /–õ", "10 *12/ –õ", "10 *12 / –õ",
    "–≥/–¥–ª", "–≥ /–¥–ª", "–≥/ –¥–ª", "–≥ / –¥–ª", "–ì/–¥–ª", "–ì /–¥–ª", "–ì/ –¥–ª", "–ì / –¥–ª", "–≥/–î–õ", "–≥ /–î–õ", "–≥/ –î–õ", "–≥ / –î–õ", "–ì/–î–õ", "–ì /–î–õ", "–ì/ –î–õ", "–ì / –î–õ",
    "10*9/–ª", "10*9 /–ª", "10*9/ –ª", "10*9 / –ª", "10* 9/–ª", "10* 9 /–ª", "10* 9/ –ª", "10* 9 / –ª", "10*9/–õ", "10*9 /–õ", "10*9/ –õ", "10*9 / –õ", "10 *9/–õ", "10 *9 /–õ", "10 *9/ –õ", "10 *9 / –õ",
    "–º–º/—á", "–º–º /—á", "–º–º/ —á", "–º–º / —á", "–ú–º/—á", "–ú–º /—á", "–ú–º/ —á", "–ú–º / —á", "–º–º/–ß", "–º–º /–ß", "–º–º/ –ß", "–º–º / –ß", "–ú–º/–ß", "–ú–º /–ß", "–ú–º/ –ß", "–ú–º / –ß",
]

markers = [
    "–ì–µ–º–æ–≥–ª–æ–±–∏–Ω",
    "–ì–µ–º–∞—Ç–æ–∫—Ä–∏—Ç",
    "–≠—Ä–∏—Ç—Ä–æ—Ü–∏—Ç—ã (RBC)",
    "–õ–µ–π–∫–æ—Ü–∏—Ç—ã (WBC)",
    "–¢—Ä–æ–º–±–æ—Ü–∏—Ç—ã (PLT)",
    "–°—Ä–µ–¥–Ω–∏–π –æ–±—ä–µ–º —ç—Ä–∏—Ç—Ä–æ—Ü–∏—Ç–æ–≤ (MCV)",
    "–°—Ä–µ–¥–Ω–µ–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –≥–µ–º–æ–≥–ª–æ–±–∏–Ω–∞ –≤ —ç—Ä–∏—Ç—Ä–æ—Ü–∏—Ç–µ (MCH)",
    "–°—Ä–µ–¥–Ω—è—è –∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏—è –≥–µ–º–æ–≥–ª–æ–±–∏–Ω–∞ –≤ —ç—Ä–∏—Ç—Ä–æ—Ü–∏—Ç–µ (MCHC)",
    "–®–∏—Ä–∏–Ω–∞ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —ç—Ä–∏—Ç—Ä–æ—Ü–∏—Ç–æ–≤ (RDW)",
    "–°–û–≠ (–°–∫–æ—Ä–æ—Å—Ç—å –æ—Å–µ–¥–∞–Ω–∏—è —ç—Ä–∏—Ç—Ä–æ—Ü–∏—Ç–æ–≤)",
    "–ü—Ä–æ—Ç—Ä–æ–º–±–∏–Ω–æ–≤–æ–µ –≤—Ä–µ–º—è (PT)",
    "–ú–ù–û (–ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–æ–µ –Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–µ –æ—Ç–Ω–æ—à–µ–Ω–∏–µ)",
    "–§–∏–±—Ä–∏–Ω–æ–≥–µ–Ω",
    "D-–¥–∏–º–µ—Ä",
    "–ì–ª—é–∫–æ–∑–∞ –∫—Ä–æ–≤–∏",
    "–ì–ª–∏–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –≥–µ–º–æ–≥–ª–æ–±–∏–Ω (HbA1c)",
    "–ò–Ω—Å—É–ª–∏–Ω",
    "–°-–ø–µ–ø—Ç–∏–¥",
    "–û–±—â–∏–π –±–µ–ª–æ–∫",
    "–ê–ª—å–±—É–º–∏–Ω",
    "–ë–∏–ª–∏—Ä—É–±–∏–Ω –æ–±—â–∏–π",
    "–ë–∏–ª–∏—Ä—É–±–∏–Ω –ø—Ä—è–º–æ–π",
    "–ê–õ–¢ (–∞–ª–∞–Ω–∏–Ω–∞–º–∏–Ω–æ—Ç—Ä–∞–Ω—Å—Ñ–µ—Ä–∞–∑–∞)",
    "–ê–°–¢ (–∞—Å–ø–∞—Ä—Ç–∞—Ç–∞–º–∏–Ω–æ—Ç—Ä–∞–Ω—Å—Ñ–µ—Ä–∞–∑–∞)",
    "–©–µ–ª–æ—á–Ω–∞—è —Ñ–æ—Å—Ñ–∞—Ç–∞–∑–∞ (–©–§)",
    "–ì–∞–º–º–∞-–≥–ª—É—Ç–∞–º–∏–ª—Ç—Ä–∞–Ω—Å—Ñ–µ—Ä–∞–∑–∞ (–ì–ì–¢)",
    "–õ–∞–∫—Ç–∞—Ç–¥–µ–≥–∏–¥—Ä–æ–≥–µ–Ω–∞–∑–∞ (–õ–î–ì)",
    "–ú–æ—á–µ–≤–∏–Ω–∞",
    "–ö—Ä–µ–∞—Ç–∏–Ω–∏–Ω",
    "–õ–∏–ø–∏–¥–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å (—Ö–æ–ª–µ—Å—Ç–µ—Ä–∏–Ω, –õ–ü–í–ü, –õ–ü–ù–ü, —Ç—Ä–∏–≥–ª–∏—Ü–µ—Ä–∏–¥—ã)",
    "–ñ–µ–ª–µ–∑–æ —Å—ã–≤–æ—Ä–æ—Ç–æ—á–Ω–æ–µ",
    "–§–µ—Ä—Ä–∏—Ç–∏–Ω",
    "–û–ñ–°–° (–æ–±—â–∞—è –∂–µ–ª–µ–∑–æ—Å–≤—è–∑—ã–≤–∞—é—â–∞—è —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å)",
    "–ö–∞–ª—å—Ü–∏–π –æ–±—â–∏–π",
    "–ö–∞–ª—å—Ü–∏–π –∏–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π",
    "–ú–∞–≥–Ω–∏–π",
    "–ö–∞–ª–∏–π",
    "–ù–∞—Ç—Ä–∏–π",
    "–•–ª–æ—Ä–∏–¥—ã",
    "–§–æ—Å—Ñ–æ—Ä",
    "–í–∏—Ç–∞–º–∏–Ω B12",
    "–§–æ–ª–∏–µ–≤–∞—è –∫–∏—Å–ª–æ—Ç–∞ (B9)",
    "–í–∏—Ç–∞–º–∏–Ω D (25-–û–ù)",
    "–¢–¢–ì (–¢–∏—Ä–µ–æ—Ç—Ä–æ–ø–Ω—ã–π –≥–æ—Ä–º–æ–Ω)",
    "–¢4 —Å–≤–æ–±–æ–¥–Ω—ã–π",
    "–¢3 —Å–≤–æ–±–æ–¥–Ω—ã–π",
    "–ê–Ω—Ç–∏-–¢–ü–û (–∞–Ω—Ç–∏—Ç–µ–ª–∞ –∫ —Ç–∏—Ä–µ–æ–∏–¥–Ω–æ–π –ø–µ—Ä–æ–∫—Å–∏–¥–∞–∑–µ)",
    "–ê–Ω—Ç–∏-–¢–ì (–∞–Ω—Ç–∏—Ç–µ–ª–∞ –∫ —Ç–∏—Ä–µ–æ–≥–ª–æ–±—É–ª–∏–Ω—É)",
]

# üìå –í–∞—Ä–∏–∞–Ω—Ç—ã –∏—Å–∫–∞–∂–µ–Ω–∏–π
unit_variants = {"10^9/–ª": ["10*9/–ª", "10^9/L", "10e9/l"], "10¬π¬≤/–ª": ["10*12/–ª", "10^12/L"], "–º–º–æ–ª—å/–ª": ["mmol/L", "–º–º/–ª"]}
spacing_variants = ["  ", "   ", "\t", "       ", "\t\t", "\t\t"]
delimiter_variants = ["-", ":", "=", " ‚Äî ", "‚Üí", "|"]
noise_chars = ["*", "_", "~", "`", "'", '"', "!", "|"]

# üìå –§—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ä–∞–∑–º–µ—Ç–∫–∏
def generate_labeled_data(groupBy, limit):
    files = 0
    for unit_id, unit in enumerate(units):
        # –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
#         lab = random.choice(labs)
#         patient = random.choice(patients)
#         dob = random.choice(dob_variants)
#         test_date = random.choice(test_dates)

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω—ã–π —Ç–µ–∫—Å—Ç –∞–Ω–∞–ª–∏–∑–æ–≤ —Å –≤–∞—Ä–∏–∞—Ü–∏—è–º–∏
        groupNum = 0
        groupedLine = ""
        for marker_id, marker in enumerate(markers):
            groupNum += 1
#             unit = random.choice(unit_variants.get(test["unit"], [test["unit"]]))
#             noise = random.choice(noise_chars) if random.random() < 0.3 else ""
            delimiter = random.choice(delimiter_variants)
            spacing = random.choice(spacing_variants)
            value = round(random.uniform(0, 100), 2)

            groupedLine += f"{marker}{spacing}{value}{spacing}{unit}\n"
            if groupNum >= groupBy:
                files += 1
                print(groupedLine)
                print("------------------------------")
                txt_file = f"./texts/u{unit_id}_m{marker_id}_g{groupBy}.gt.txt"
                img_file = f"./texts/u{unit_id}_m{marker_id}_g{groupBy}.tiff"

                string_to_file(txt_file, groupedLine)
#                 txt_file_to_img(txt_file, img_file)

                groupedLine = ""
                groupNum = 0

            if files >= limit:
                return
    return

def string_to_file(file_name, text):
    with open(file_name, "w", encoding="utf-8") as f:
        f.write(text)

# def txt_file_to_img(txt_file, img_file):
#     # üìå –ó–∞–ø—É—Å–∫–∞–µ–º text2image
#     command = [
#         "text2image",
#         "--text", txt_file,
#         "--outputbase", img_file,
#         "--font", FONT_NAME,
#         "--fonts_dir", FONTS_DIR
#     ]
#
#     print(f"üñº –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è: {img_file}")
#     subprocess.run(command, check=True)
#
#     print("‚úÖ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")

# üìå –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º 50 –≤–∞—Ä–∏–∞—Ü–∏–π
labeled_variations = generate_labeled_data(3, 250000)

# üìå –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Ñ–∞–π–ª JSON
# output_file = "./labeled_ocr_data.json"
# with open(output_file, "w", encoding="utf-8") as f:
#     json.dump(labeled_variations, f, ensure_ascii=False, indent=2)

# üìå –í—ã–≤–æ–¥–∏–º –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É
# output_file
